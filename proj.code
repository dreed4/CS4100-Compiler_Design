<define PARSE CODE.START/>
<define TOKEN ( (":"":") ("<""=") (">""=") ("[""]") (":""=") ) />
<define KEYWORDS ("hd" "tl" "ref" "not" "and" "or" "list" "if" "then" "else" "let" "in" "end" "while" "do" "val" "real" "unit" "bool") />

<code START parse = (CODE.P";") />

<code P parse = ((CODE.E2 CODE.P2) ) />
<code P2 parse = ((";" CODE.P)
		|";" ) />

<*Since I have already named all the productions, I am just using the next production to help keep things straight*>
<code E parse=(CODE.COMM) />

<code COMM parse=(CODE.LOG CODE.COMM2) />
<code COMM2 parse=((","CODE.LOG CODE.COMM2)
		|"" ) />

<code LOG parse=(CODE.COMP CODE.LOG2) />
<code LOG2 parse=(("and"CODE.COMP CODE.LOG2)
		|("or"CODE.COMP CODE.LOG2)
		|"" ) />
		
<code COMP parse=(CODE.SUM CODE.COMP2) />
<code COMP2 parse=(("<"CODE.SUM CODE.COMP2)
		|(">"CODE.SUM CODE.COMP2)
		|("="CODE.SUM CODE.COMP2)
		|("<="CODE.SUM CODE.COMP2)
		|(">="CODE.SUM CODE.COMP2)
		|("") ) />
		
<code SUM parse=(CODE.FACT CODE.SUM2) />
<code SUM2 parse=(("+" CODE.FACT CODE.SUM2)
		|("-" CODE.FACT CODE.SUM2) 
		|("")) />
		
<code FACT parse=(CODE.LST CODE.FACT2) />
<code FACT2 parse=(("*" CODE.LST CODE.FACT2)
		|("/" CODE.LST CODE.FACT2)
		|("") ) />
		
<code LST parse=(CODE.OP CODE.LST2) />
<code LST2 parse=(("::" CODE.OP CODE.LST2)
		|("") ) />
		
<code OP parse=(("-" CODE.J)
		|("hd" CODE.J)
		|("tl" CODE.J)
		|("ref" CODE.J)
		|("!" CODE.J)
		|("not" CODE.J)
		|CODE.J ) />

<code J parse=(	FLOAT
		|ID
		|INT
		|("["CODE.COMM"]")
		|("[]")
		|("("CODE.COMM")") ) />

<code SEMIC parse = (CODE.SEMIC2";") />

<code SEMIC2 parse=(CODE.COMM CODE.SEMIC3) />
<code SEMIC3 parse= ((";" CODE.COMM CODE.SEMIC3)
                |("")) />

<code E2 parse = ( ( "("CODE.P")" ) 
		|CODE.E3  ) />

<* I'm not sure if creating a "loop" in this next one will cause an issue *>
<code E3 parse = (("if" CODE.E "then" CODE.E2 "else" CODE.E2)
		|(CODE.E4)  ) />
<code E4 parse = ("let" CODE.C "in" CODE.P "end") 
		|(CODE.E5)/>
<code E5 parse = ((CODE.E ":=" CODE.E2)
		|(CODE.E6)	)/>
<code E6 parse = (("while" CODE.E "do" CODE.E2) 
		|(CODE.E7) )/>
<code E7 parse = (CODE.D
		|CODE.E8) />
<code E8 parse = (CODE.E) />

<code C parse = ((CODE.D CODE.C2)) />
<code C2 parse = ((";"CODE.D CODE.C)
		|"" ) />

<code D parse = ("val" ID ":" CODE.T"="CODE.E2) />

<code T parse = (CODE.T2 CODE.Tp) />
<code Tp parse = (("list" CODE.Tp)
		|"" ) />
<code T2 parse = (CODE.T3 CODE.T2p ) />
<code T2p parse = (("ref" CODE.T2p)
		|("list" CODE.T2p)
		|"" ) />
<code T3 parse = ("int"
		|"real"
		|"unit"
		|"bool") />
